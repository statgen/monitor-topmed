#
#   Configuration file for topmedthrottle.pl
#
#   Use this file to control the rate at which topmed jobs are submitted to SLURM
#   This is necessary because SLURM cannot properly manage multiple QOS
#   and using only one QOS, we can easily run too many of one job type,
#   overwhelming the filesystem, NFS or the network
#

#   Define each type of job that can be run
#   min and max define the minumum jobs to be submitted and max allow to be queued system-wide
#   maxperhost is the most jobs allowed on any given host for this particular job
#   mon-options are extra options passed to topmed_monitor
#   mon-log is the file to log the running of topmed_monitor

JOB awscopy {
  maxperhost= 4
  max= 20
  mon-options= -random -suberr
  mon-log=  /working/topmed-output/topmed_gce.log
}
JOB bcf {
  maxperhost= 35
  max= 220
  mon-options= -random -suberr
  mon-log=  /working/topmed-output/topmed_bcf.log
}
JOB cram {
  maxperhost= 15
  max= 40
  mon-options= -random -suberr
  mon-log=  /working/topmed-output/topmed_cram.log
}
#JOB fix {
#  maxperhost= 0
#  max= 0
#  mon-options= -random -suberr
#  mon-log=  /working/topmed-output/topmed_fix.log
#}
JOB gcebackup {
  maxperhost= 4
  max= 20
  mon-options= -random -suberr
  mon-log=  /working/topmed-output/topmed_backup.log
}
JOB gcecopy {
  maxperhost= 4
  max= 20
  mon-options= -random -suberr
  mon-log=  /working/topmed-output/topmed_gce.log
}
JOB gcepull {
  maxperhost= 10
  max= 30
  mon-options= -random
  mon-log=  /working/topmed-output/topmed_gce.log
}
JOB gcepush {
  maxperhost= 5
  max= 20
#  mon-options= -random -suberr -datayear 3
  mon-options= -random -suberr
  mon-log=  /working/topmed-output/topmed_gce.log
}
JOB qplot {
  maxperhost= 10
  max= 50
  mon-options= -random -suberr
  mon-log=  /working/topmed-output/topmed_qplot.log
}
#JOB redo {
#  maxperhost= 0
#  max= 0
#  mon-options= -random -suberr -v
#  mon-log=  /working/topmed-output/topmed_redo.log
#}
JOB verify {
  maxperhost= 10
  max= 30
  mon-options= -random
  mon-log=  /working/topmed-output/topmed_verify.log
}
